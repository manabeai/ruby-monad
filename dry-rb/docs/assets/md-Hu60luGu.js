import{b as e,o,w as a,g as l,ad as n,v as i,x as d,T as s}from"./modules/vue-BEvEvfvk.js";import{I as p}from"./slidev/default-M0KRtQYP.js";import{u as m,f as c}from"./slidev/context-DoxqTwNj.js";import"./index-DbUhERds.js";import"./modules/shiki-BRADPbEg.js";const R={__name:"slides.md__slidev_2",setup(_){const{$clicksContext:r,$frontmatter:t}=m();return r.setup(),(f,u)=>(o(),e(p,i(d(s(c)(s(t),1))),{default:a(()=>u[0]||(u[0]=[l("h1",null,"dry-monadsとは？",-1),l("h2",null,"代数的データ型をRubyで",-1),l("p",null,[n("dry-monadsは、関数型言語でおなじみの"),l("strong",null,"代数的データ型"),n("をRubyで扱えるようにするライブラリです。")],-1),l("div",{class:"grid grid-cols-2 gap-8 mt-8"},[l("div",null,[l("h3",null,"提供される型"),l("ul",null,[l("li",null,[l("strong",null,[n("Result"),l("span",null,"Success | Failure")]),l("ul",null,[l("li",null,"処理の成功/失敗を表現")])]),l("li",null,[l("strong",null,[n("Maybe"),l("span",null,"Some | None")]),l("ul",null,[l("li",null,"値の有無を表現")])]),l("li",null,[l("strong",null,[n("Try"),l("span",null,"Value | Error")]),l("ul",null,[l("li",null,"例外を値として扱う")])])])]),l("div")],-1),l("p",null,"これらの型を使うことで、副作用を含む処理をいい感じに扱えるようになります。",-1)])),_:1,__:[0]},16))}};export{R as default};
